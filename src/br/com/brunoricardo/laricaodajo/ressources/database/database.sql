CREATE CACHED TABLE LUANAGON_LARICAO.INGREDIENT
(
   IDINGREDIENT  INTEGER       AUTO_INCREMENT NOT NULL,
   DESCRIPTION   VARCHAR(50)   UNIQUE NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.INGREDIENT
   ADD PRIMARY KEY (IDINGREDIENT);

ALTER TABLE LUANAGON_LARICAO.INGREDIENT
   ADD CONSTRAINT CONSTRAINT_109 UNIQUE (DESCRIPTION);

CREATE CACHED TABLE LUANAGON_LARICAO.PRODUCT
(
   IDPRODUCT         INTEGER        AUTO_INCREMENT NOT NULL,
   NUMBER            INTEGER        UNIQUE NOT NULL,
   DESCRIPTION       VARCHAR(100)   NOT NULL,
   VALUE             DOUBLE         NOT NULL,
   BARCODE           VARCHAR(20)    DEFAULT '',
   ISINDUSTRIALIZED  SMALLINT       DEFAULT 0 NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.PRODUCT
   ADD PRIMARY KEY (IDPRODUCT);

CREATE CACHED TABLE LUANAGON_LARICAO.PRODUCT_HAS_INGREDIENT
(
   IDPRODUCT     INTEGER   NOT NULL,
   IDINGREDIENT  INTEGER   NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.PRODUCT_HAS_INGREDIENT
   ADD PRIMARY KEY (IDPRODUCT, IDINGREDIENT);

ALTER TABLE LUANAGON_LARICAO.PRODUCT_HAS_INGREDIENT
  ADD CONSTRAINT FK_PRODUCT_HAS_INGREDIENT_INGREDIENT FOREIGN KEY (IDINGREDIENT)
  REFERENCES LUANAGON_LARICAO.INGREDIENT (IDINGREDIENT) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

ALTER TABLE LUANAGON_LARICAO.PRODUCT_HAS_INGREDIENT
  ADD CONSTRAINT FK_PRODUCT_HAS_INGREDIENT_PRODUCT FOREIGN KEY (IDPRODUCT)
  REFERENCES LUANAGON_LARICAO.PRODUCT (IDPRODUCT) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

CREATE INDEX LUANAGON_LARICAO.FK_PRODUCT_HAS_INGREDIENT_PRODUCT_INDEX_D
   ON LUANAGON_LARICAO.PRODUCT_HAS_INGREDIENT (IDPRODUCT ASC);

CREATE INDEX LUANAGON_LARICAO.FK_PRODUCT_HAS_INGREDIENT_INGREDIENT_INDEX_D
   ON LUANAGON_LARICAO.PRODUCT_HAS_INGREDIENT (IDINGREDIENT ASC);

CREATE CACHED TABLE LUANAGON_LARICAO.FORMOFPAYMENT
(
   IDFORMOFPAYMENT  INTEGER       AUTO_INCREMENT NOT NULL,
   NAME             VARCHAR(50)   UNIQUE NOT NULL,
   TYPE             VARCHAR(50)   NOT NULL,
   ISACTIVE         SMALLINT      DEFAULT 1 NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.FORMOFPAYMENT
   ADD PRIMARY KEY (IDFORMOFPAYMENT);

CREATE CACHED TABLE LUANAGON_LARICAO.EMPLOYEE
(
   IDEMPLOYEE  INTEGER        AUTO_INCREMENT NOT NULL,
   NAME        VARCHAR(250)   NOT NULL,
   MAIL        VARCHAR(150)   DEFAULT '""',
   USER      VARCHAR(50)      UNIQUE NOT NULL,
   PASSWORD    VARCHAR(250)   NOT NULL,
   LEVEL       INTEGER        DEFAULT 1 NOT NULL,
   ISACTIVE    SMALLINT       DEFAULT 1 NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.EMPLOYEE
   ADD PRIMARY KEY (IDEMPLOYEE);

CREATE CACHED TABLE LUANAGON_LARICAO.BOX
(
   IDBOX        INTEGER     AUTO_INCREMENT NOT NULL,
   IDEMPLOYEE   INTEGER     NOT NULL,
   FUNDS        DOUBLE      DEFAULT 0 NOT NULL,
   OPENINGDATE  TIMESTAMP   NOT NULL,
   CLOSINGDATE  TIMESTAMP,
   ISOPEN       SMALLINT    DEFAULT 1 NOT NULL,
   VALUE        DOUBLE      DEFAULT 0 NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.BOX
   ADD PRIMARY KEY (IDBOX);

ALTER TABLE LUANAGON_LARICAO.BOX
  ADD CONSTRAINT FK_BOX_EMPLOYEE FOREIGN KEY (IDEMPLOYEE)
  REFERENCES LUANAGON_LARICAO.EMPLOYEE (IDEMPLOYEE) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

CREATE INDEX LUANAGON_LARICAO.FK_BOX_EMPLOYEE_INDEX_1
   ON LUANAGON_LARICAO.BOX (IDEMPLOYEE ASC);

CREATE CACHED TABLE LUANAGON_LARICAO.WITHDRAWAL
(
   IDWITHDRAWAL  INTEGER        AUTO_INCREMENT NOT NULL,
   DATE          TIMESTAMP      NOT NULL,
   DESCRIPTION   VARCHAR(300)   NOT NULL,
   VALUE         DOUBLE         NOT NULL,
   IDBOX         INTEGER        NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.WITHDRAWAL
   ADD PRIMARY KEY (IDWITHDRAWAL);

ALTER TABLE LUANAGON_LARICAO.WITHDRAWAL
  ADD CONSTRAINT FK_WITHDRAWAL_BOX FOREIGN KEY (IDBOX)
  REFERENCES LUANAGON_LARICAO.BOX (IDBOX) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

CREATE INDEX LUANAGON_LARICAO.FK_WITHDRAWAL_BOX_INDEX_B
   ON LUANAGON_LARICAO.WITHDRAWAL (IDBOX ASC);

CREATE CACHED TABLE LUANAGON_LARICAO.ORDERER
(
   IDORDERER          INTEGER       AUTO_INCREMENT NOT NULL,
   NUMBER             INTEGER       NOT NULL,
   DATE               TIMESTAMP     NOT NULL,
   IDBOX              INTEGER       NOT NULL,
   SUBTOTAL           DOUBLE        NOT NULL,
   DISCOUNT           DOUBLE        DEFAULT 0 NOT NULL,
   TOTAL              DOUBLE        NOT NULL,
   AMOUNTRECEIVED     DOUBLE        NOT NULL,
   IDFORMOFPAYMENT    INTEGER       NOT NULL,
   STATUS             VARCHAR(20)   NOT NULL,
   FORMOFCONSUMPTION  VARCHAR(50)   NOT NULL
);

ALTER TABLE LUANAGON_LARICAO.ORDERER
   ADD PRIMARY KEY (IDORDERER);

ALTER TABLE LUANAGON_LARICAO.ORDERER
  ADD CONSTRAINT FK_ORDERER_BOX FOREIGN KEY (IDBOX)
  REFERENCES LUANAGON_LARICAO.BOX (IDBOX) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

ALTER TABLE LUANAGON_LARICAO.ORDERER
  ADD CONSTRAINT FK_ORDERER_FORMOFPAYMENT FOREIGN KEY (IDFORMOFPAYMENT)
  REFERENCES LUANAGON_LARICAO.FORMOFPAYMENT (IDFORMOFPAYMENT) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

CREATE INDEX LUANAGON_LARICAO.FK_ORDERER_BOX_INDEX_E
   ON LUANAGON_LARICAO.ORDERER (IDBOX ASC);

CREATE INDEX LUANAGON_LARICAO.FK_ORDERER_FORMOFPAYMENT_INDEX_E
   ON LUANAGON_LARICAO.ORDERER (IDFORMOFPAYMENT ASC);

CREATE CACHED TABLE LUANAGON_LARICAO.ORDER_HAS_PRODUCT
(
   IDORDERER    INTEGER        NOT NULL,
   IDPRODUCT    INTEGER        NOT NULL,
   AMOUNT       INTEGER        NOT NULL,
   TOTAL        DOUBLE         NOT NULL,
   ORDERNUMBER  INTEGER        NOT NULL,
   NAME         VARCHAR(100)
);

ALTER TABLE LUANAGON_LARICAO.ORDER_HAS_PRODUCT
   ADD PRIMARY KEY (IDORDERER, IDPRODUCT);

ALTER TABLE LUANAGON_LARICAO.ORDER_HAS_PRODUCT
  ADD CONSTRAINT FK_ORDER_HAS_PRODUCT_ORDERER FOREIGN KEY (IDORDERER)
  REFERENCES LUANAGON_LARICAO.ORDERER (IDORDERER) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

ALTER TABLE LUANAGON_LARICAO.ORDER_HAS_PRODUCT
  ADD CONSTRAINT FK_ORDER_HAS_PRODUCT_PRODUCT FOREIGN KEY (IDPRODUCT)
  REFERENCES LUANAGON_LARICAO.PRODUCT (IDPRODUCT) 
  ON UPDATE RESTRICT
  ON DELETE CASCADE;

CREATE INDEX LUANAGON_LARICAO.FK_ORDER_HAS_PRODUCT_PRODUCT_INDEX_C
   ON LUANAGON_LARICAO.ORDER_HAS_PRODUCT (IDPRODUCT ASC);

CREATE INDEX LUANAGON_LARICAO.FK_ORDER_HAS_PRODUCT_ORDERER_INDEX_C
   ON LUANAGON_LARICAO.ORDER_HAS_PRODUCT (IDORDERER ASC);

